log analysis

处理数据量级别，1EB
字符串查找算法，O(n)
完全扫描次数，最多两次
输入模式，离线，在线
输出信息，

问题简述
一个过程有 S 个操作步骤，
M 个操作者执行了 P 个过程，
每个步骤都有执行时间和附加信息，
一个日志的形式为：
T1 M1 S1
T2 M2 S1
T3 M2 S2
T4 M3 S1
T5 M2 S3
T6 M3 S2
T7 M3 S3
T8 M1 S3
共有 M1 M2 M3 三个操作者
共有 S1 S2 S3 三个操作步骤
每个步骤执行时的时间是 T1 T2 T3 T4 T5 T6 T7 T8 

根据以上问题简述，输出信息应当有这些：
每个操作者执行完所有步骤的总时间
给定时间长度下有多少个操作者，完成了多少个，进行中多少个
给定时间长度下来到了多少个操作者
每个步骤的执行时间长度，关联或不关联操作者
某两步之间的时间长度，关联或不关联操作者

问题描述扩展
在问题简述中，一个操作者只执行了一个过程，
而且每个过程和操作步骤没有绑定，
加入过程 P 之后，
一个日志的形式为：
T1  M1 P1 S1
T2  M2 P1 S1
T3  M2 P1 S2
T4  M3 P1 S1
T5  M2 P1 S3
T6  M2 P2 S1
T7  M3 P1 S2
T8  M2 P2 S2
T9  M3 P1 S3
T10 M3 P2 S1
T11 M1 P1 S2
T12 M2 P2 S3
T13 M1 P1 S3
T14 M3 P2 S2
T15 M1 P2 S1
T16 M3 P2 S3
T17 M1 P2 S2
T18 M1 P2 S3
共有 M1 M2 M3 三个操作者
共有 P1 P2 两个过程
共有 S1 S3 S3 三个步骤
对于这个问题描述，输出信息应当有：
每个操作者的执行的过程数
每个操作者所有过程的总时间长度
每个操作者每个过程的时间长度
所有过程的时间长度
给定时间长度，过程的个数，
给定时间长度，操作者的个数

问题描述扩展二
在问题描述扩展中，对于所有的操作，只有一种过程，
如果有两种过程，那么这两种过程是否可以归约为一种过程呢，
也即是，把一次完成中的两个过程的操作步骤合并到同一个过程中，
那么，计算一个过程中的操作步骤即可得出所有的
这里合并和归约有限制吗，也即是说，会有不能进行合并和归约的情况吗？
假设有两种过程，P 和 X，它们的操作步骤分别为 S1 S2 S3, 和 Y1 Y2 Y3
操作者 M1 在执行这两个过程的所有可能的情况，
注意，现在 P 和 X 没有任何关联的限制
T1 M1 P1 S1  X1 Y1
T2 M1 P1 S2
T3 M1        X1 Y2
T4 M1 P1 S3
T5 M1 P2 S1  X1 Y3
T6 M1 P2 S2  X2 Y1
T7 M1        X2 Y2
T8 M1        X2 Y3
T9 M1 P2 S3
共有 M1 一个操作者
共有 P X 两类过程
共有 P1 P2 X1 X2 四个过程
共有 S1 S2 S3  Y1 Y2 Y3 六个步骤
那么，过程 P 和 X 可以合并吗
如上，如果合并，那么在计算过程X1的步骤Y3的时候，就忽略了过程P2的S1
所以，两个过程如果有同时执行的情况，那么就不能合并

这里可以给出一个定义了，
一个过程的步骤是可区分的，只要每一个步骤在不同的时间点上进行执行即可。
如果两个过程中的所有步骤都是可区分的，那么这两个过程就是可合并的。

以上例子中，S1 和 Y1 是不可区分的，S1 和 Y3 也是不可区分的
所以，例子中的两个过程是不可合并的。
对于不可合并的过程，要分别记录和统计，但对“完全扫描次数”应当没有增加。
也即是说，得到多种过程的数据，和得到一种过程的数据，它们的“完全扫描次数”是一致的。

输出信息请求的响应时间与操作过程数 O(1)
磁盘存储空间量与操作过程数 O(n)

问题简述补充
如果一个过程没有执行所有指定的步骤，
如果某个步骤有分支，
如果步骤中有不同状态，(和分支同义？)


方法论：
原始信息分析，
信息描述，
模式特征提取，
信息搜索，
信息显示，


支持多种过程
支持多个步骤
支持多个操作者
支持步骤缺失
支持步骤分支

示例场景描述：
有接口程序，有处理程序，有授权程序，有任务分发程序
每个程序都有一个日志文件，也即是有四个日志文件，
系统按照事件触发进行工作，

日志的基本格式：
TIME  PROGRAM THREAD  STEP1   STEP2   REQUESTID
时间，程序名，线程号，步骤名，步骤名，请求标识符

说明：
日志按行打印
有的行不符合此格式
有的行中可能没有步骤名
有的行中可能有多个步骤名
不同的程序名打印的时间可能一样

关于概念的对应，
过程 P，代表程序名对应的过程
过程 R，代表线程号对应的过程
过程 Q，代表请求的过程
过程 X，步骤名1所在的过程
过程 Y，步骤名2所在的过程
过程 Z，步骤名3所在的过程

这里有一个包含的概念，
过程 P 包含过程 R，
过程 Q 存在于不同的 P 中，也存在于不同的 R 中
过程 Q 可能包含 X，也可能包含 Y，也可能包含 Z

过程 P，开始，创建线程，销毁线程，退出
过程 R，开始，监听事件，处理事件，退出
过程 Q，收到请求，申请处理资源，处理过程，请求结束，释放处理资源
过程 X，申请资源一，申请资源二，释放资源二，释放资源一
过程 Y，处理步骤一，处理步骤二，处理步骤三，处理步骤四
过程 Z，处理步骤一，处理步骤二，处理步骤三

其中，过程 X 和 过程 Y Z 有关联，属于边界上的关联
过程 Y 和 过程 Z 有关联，处理步骤可能像上面的例子，
过程 Q 属于过程 R 中的处理事件那个步骤，可以合并吗？
过程 Q 是请求处理的相关步骤，一个过程 R 会有多个过程 Q，
它们的对应关系是一对多，也需要标识每一个请求过程，
如果合并的话，那么在过程 R 中会出现多个收到请求，而且不能区分不同的请求，
所以，不能合并。

这里再给出过程的一个属性，
一个过程对应一个独立的处理流程，
所谓独立的流程，是指，不同个数的流程是可区分的。
前面给出了步骤可区分的，这里给出流程可区分的。
“可区分的”作为“可合并的”判断条件。
比如，需要标识请求流程，就不能将请求流程合并到线程流程中。
比如，两个流程中的某个步骤可能同时发生，就不能将这两个流程合并。

补充，
如果某一过程中只是一个步骤的重复，而且重复次数不确定，
那么，这是一大类过程需要考虑的
比如，请求到来后，统计收到的数据量，即字节数，
这类过程只是记录请求数据包的到来和大小，
比如，结果返回后，统计需要发送的数据量，即字节数，
这类过程也是只记录数据包的发送和大小，
由此可输出发送频率，网络负载量，网络模块事件数量



